{"version":3,"sources":["components/Button/Button.jsx","components/DisplayEquation/DisplayEquation.js","components/Input/Input.jsx","components/ClearButton/ClearButton.jsx","components/Recent/Recent.jsx","App.js","serviceWorker.js","index.js"],"names":["Button","props","className","val","children","isNaN","onClick","handleClick","DisplayEquation","equation","Input","input","ClearButton","handleClear","Recent","display","recent","map","elt","result","App","useState","setInput","isEvaluated","setIsEvaluated","setEquation","setPreviousExpr","setCurrentExpr","undefined","operator","setOperator","useSync","setRecent","useEffect","getRecentData","fetch","headers","method","body","JSON","stringify","output","calculation","then","response","json","data","res","recentData","addToInput","number","prevInput","updateDisplay","chooseOperator","operation","prevEquation","indexOf","computation","previous","parseFloat","current","toFixed","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.481776f4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Button.scss';\n\nconst isOperator = (val) => {\n\treturn !isNaN(val) || val === '.' || val === '=';\n};\n\nconst Button = (props) => (\n\t<div\n\t\tclassName={`button-wrapper ${isOperator(props.children) ? null : 'operator'}`}\n\t\tonClick={() => props.handleClick(props.children)}\n\t>\n\t\t{/* make text show up for a button */}\n\t\t{props.children}\n\t\t{/* bacsed on which button it is will make a button a different color, number or operator for example */}\n\t</div>\n);\n\nexport default Button;\n","import React from 'react';\nimport './DisplayEquation.scss';\n\nconst DisplayEquation = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"equation\">{props.equation}</div>\n\t\t</div>\n\t);\n};\n\nexport default DisplayEquation;\n","import React, { Component } from 'react';\nimport './Input.scss';\n\nconst Input = (props) => <div className=\"input\">{props.input}</div>;\n\nexport default Input;\n","import React, { Component } from 'react';\nimport './ClearButton.scss';\n\nconst ClearButton = (props) => (\n\t<div className=\"clear-btn\" onClick={props.handleClear}>\n\t\t{props.children}\n\t</div>\n);\n\nexport default ClearButton;\n","import React from 'react';\nimport './Recent.scss';\n\nconst Recent = (props) => {\n\tconst { recent } = props;\n\tconst display = recent.map((elt) => (\n\t\t<div className=\"row\">\n\t\t\t<div className=\"recent-calculation\">{elt.result}</div>\n\t\t</div>\n\t));\n\n\treturn <div className=\"recent-wrapper\">{display}</div>;\n};\n\nexport default Recent;\n","import React, { useState, useEffect } from 'react';\nimport useSync from 'react-use-sync';\nimport './App.scss';\n\nimport Button from './components/Button/Button';\nimport DisplayEquation from './components/DisplayEquation/DisplayEquation';\nimport Input from './components/Input/Input';\nimport ClearButton from './components/ClearButton/ClearButton';\nimport Recent from './components/Recent/Recent';\n\nconst App = () => {\n\tconst [ input, setInput ] = useState('');\n\tconst [ isEvaluated, setIsEvaluated ] = useState(false);\n\tconst [ equation, setEquation ] = useState('');\n\tconst [ previousExpr, setPreviousExpr ] = useState('');\n\tconst [ currentExpr, setCurrentExpr ] = useState('');\n\tconst [ operator, setOperator ] = useState(undefined);\n\tconst [ recent, setRecent ] = useSync('recent', useState([]));\n\n\tuseEffect(() => {\n\t\tgetRecentData();\n\t});\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (isEvaluated) {\n\t\t\t\t//save input and equation to DB\n\t\t\t\tfetch('https://hidden-wave-54655.herokuapp.com/insert', {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-type': 'application/json'\n\t\t\t\t\t},\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tinput: equation,\n\t\t\t\t\t\toutput: input,\n\t\t\t\t\t\tcalculation: equation + ' = ' + input\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t\t.then((response) => response.json())\n\t\t\t\t\t.then((data) => data['data'])\n\t\t\t\t\t.then(getRecentData);\n\t\t\t}\n\t\t\tsetEquation('');\n\t\t\tsetIsEvaluated(false);\n\t\t\thandleClear();\n\t\t},\n\t\t[ isEvaluated ]\n\t);\n\n\tconst getRecentData = () => {\n\t\tfetch('https://hidden-wave-54655.herokuapp.com/recent')\n\t\t\t.then((res) => res.json())\n\t\t\t.then((recentData) => recentData.data)\n\t\t\t.then((recent) => setRecent(recent));\n\t};\n\n\tconst addZero = (val) => {\n\t\tif (input == '') {\n\t\t\tsetInput('0');\n\t\t\tsetEquation(val);\n\t\t}\n\t\tif (input !== '') {\n\t\t\tsetInput((prevInput) => prevInput + val);\n\t\t\tsetEquation((prevEquation) => prevEquation + val);\n\t\t}\n\t\tif (input == '0') {\n\t\t\tsetInput(val);\n\t\t\tsetEquation(val);\n\t\t}\n\t};\n\n\tconst addDecimal = (val) => {\n\t\tif (input.indexOf('.') === -1) {\n\t\t\tsetInput((prevInput) => prevInput + val);\n\t\t\tsetEquation((prevEquation) => prevEquation + val);\n\t\t}\n\t\tif (input == '') {\n\t\t\tsetInput('0' + val);\n\t\t\tsetEquation('0' + val);\n\t\t}\n\t};\n\n\tconst handleClear = () => {\n\t\tsetPreviousExpr('');\n\t\tsetCurrentExpr('');\n\t\tsetInput('');\n\t\tsetOperator('');\n\t\tsetEquation('');\n\t};\n\n\tconst addToInput = (number) => {\n\t\tsetInput((prevInput) => prevInput + number);\n\t\tupdateDisplay(number);\n\t};\n\n\tconst chooseOperator = (operation) => {\n\t\tif (input === '') {\n\t\t\treturn;\n\t\t}\n\t\tsetOperator(operation);\n\t\tsetEquation(input);\n\t\tsetInput('');\n\t\tupdateDisplay(operation);\n\t};\n\n\tconst evaluate = () => {\n\t\tlet computation;\n\t\tconst previous = parseFloat(equation);\n\t\tconst current = parseFloat(input);\n\t\tif (isNaN(previous) || isNaN(current)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (operator === '+') {\n\t\t\tcomputation = (previous + current).toFixed(2);\n\t\t} else if (operator === '-') {\n\t\t\tcomputation = (previous - current).toFixed(2);\n\t\t} else if (operator === '*') {\n\t\t\tcomputation = (previous * current).toFixed(2);\n\t\t} else if (operator === '/') {\n\t\t\tcomputation = (previous / current).toFixed(2);\n\t\t}\n\t\tsetInput(parseFloat(computation));\n\t\tsetOperator(undefined);\n\t\tsetIsEvaluated(true);\n\t};\n\n\tconst updateDisplay = (number) => {\n\t\tsetEquation((prevEquation) => prevEquation + number);\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"calc-wrapper\">\n\t\t\t\t<DisplayEquation equation={equation} />\n\t\t\t\t<Input input={input} />\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<Button handleClick={addToInput}>7</Button>\n\t\t\t\t\t<Button handleClick={addToInput}>8</Button>\n\t\t\t\t\t<Button handleClick={addToInput}>9</Button>\n\t\t\t\t\t<Button handleClick={chooseOperator}>/</Button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<Button handleClick={addToInput}>4</Button>\n\t\t\t\t\t<Button handleClick={addToInput}>5</Button>\n\t\t\t\t\t<Button handleClick={addToInput}>6</Button>\n\t\t\t\t\t<Button handleClick={chooseOperator}>*</Button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<Button handleClick={addToInput}>1</Button>\n\t\t\t\t\t<Button handleClick={addToInput}>2</Button>\n\t\t\t\t\t<Button handleClick={addToInput}>3</Button>\n\t\t\t\t\t<Button handleClick={chooseOperator}>+</Button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<Button handleClick={addDecimal}>.</Button>\n\t\t\t\t\t<Button handleClick={addZero}>0</Button>\n\t\t\t\t\t<Button handleClick={evaluate}>=</Button>\n\t\t\t\t\t<Button handleClick={chooseOperator}>-</Button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<ClearButton handleClear={handleClear}>Clear</ClearButton>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Recent recent={recent} />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}